{"version":3,"sources":["components/Notification.js","reducers/notificationReducer.js","services/blogs.js","components/BlogList.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/login.js","App.js","store.js","index.js"],"names":["Notification","notifications","this","props","react_default","a","createElement","className","React","Component","connect","state","nextNotificationId","notify","message","time","dispatch","id","type","setMessage","setTimeout","resetMessage","NotificationReducer","arguments","length","undefined","action","token","services_blogs","getAll","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","setToken","newToken","concat","update","_ref3","_callee3","_context3","put","_x2","remove","_ref4","_callee4","_context4","delete","_x3","Blog","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleInfo","event","target","tagName","setState","displayMoreInfo","likeBlog","blog","updatedBlog","title","author","url","likes","user","_id","blogService","updateBlogs","removeBlog","window","confirm","toString","removeFromBlogs","t0","console","log","alert","blogStyle","paddingTop","paddingLeft","paddingBottom","border","borderWidth","marginBottom","showOnlyToCorrectUser","display","onClick","style","href","name","mapDispatchToProps","LoginForm","handleSubmit","handleChange","username","password","onSubmit","value","onChange","BlogForm","Togglable","toggleVisibility","visible","hideWhenVisible","showWhenVisible","buttonLabel","children","services_login","login","credentials","App","componentDidMount","blogs","loggedUserJSON","sort","compareLikes","localStorage","getItem","JSON","parse","handleFieldChange","defineProperty","preventDefault","loginService","setItem","stringify","logout","removeItem","addBlog","blogObject","savedBlog","map","b","_ref5","_callee5","removedBlog","_context5","filter","_x4","loginVisible","_this2","components_Notification","components_Togglable","components_LoginForm","components_BlogForm","BlogList","key","reducer","combineReducers","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a83508e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Notification extends React.Component {\r\n  render() {\r\n    const style = {\r\n      border: 'solid',\r\n      padding: 10,\r\n      borderWidth: 1\r\n    }\r\n    const { notifications } = this.props\r\n\r\n    if (notifications === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className='notification'>\r\n        {notifications}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notifications: state.notifications\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Notification)","const NotificationReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'SET_NOTIFICATION':\r\n      return action.message\r\n    case 'RESET_NOTIFICATION':\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setMessage = (message, id) => {\r\n  return {\r\n    type: 'SET_NOTIFICATION',\r\n    message,\r\n    id\r\n  }\r\n}\r\n\r\nconst resetMessage = (id) => {\r\n  return {\r\n    type: 'RESET_NOTIFICATION',\r\n    id\r\n  }\r\n}\r\n\r\nlet nextNotificationId = 0\r\nexport const notify = (message, time) => {\r\n  return (dispatch) => {\r\n    const id = nextNotificationId++\r\n    dispatch(setMessage(message, id))\r\n\r\n    setTimeout(() => {\r\n      dispatch(resetMessage(id))\r\n    }, time * 1000)\r\n  }\r\n}\r\n\r\nexport default NotificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const config = {\r\n    headers: { 'Authorization': token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (newObject) => {\r\n  const id = newObject.id\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { 'Authorization': token }\r\n  }\r\n  await axios.delete(`${baseUrl}/${id}`, config)\r\n}\r\n\r\nexport default {\r\n  getAll, create, setToken, update, remove\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { notify } from '../reducers/notificationReducer'\r\nimport PropTypes from 'prop-types'\r\nimport blogService from '../services/blogs'\r\nimport '../index.css'\r\n\r\nclass Blog extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayMoreInfo: false,\r\n    }\r\n  }\r\n\r\n  toggleInfo = (event) => {\r\n    if (event.target.tagName === 'DIV') {\r\n      this.setState({ displayMoreInfo: !this.state.displayMoreInfo })\r\n    }\r\n  }\r\n\r\n  likeBlog = async () => {\r\n    const blog = {\r\n      id: this.props.blog.id,\r\n      title: this.props.blog.title,\r\n      author: this.props.blog.author,\r\n      url: this.props.blog.url,\r\n      likes: this.props.blog.likes + 1,\r\n      user: this.props.blog.user._id\r\n    }\r\n\r\n    const updatedBlog = await blogService.update(blog)\r\n    this.props.updateBlogs(updatedBlog)\r\n  }\r\n\r\n  removeBlog = async () => {\r\n    const message = `Do you want to delete '${this.props.blog.title}' by ${this.props.blog.author}?`\r\n    if (this.props.user.id === this.props.blog.user._id || this.props.blog.user === null) {\r\n      if (window.confirm(message)) {\r\n        try {\r\n          await blogService.remove(this.props.blog.id.toString())\r\n          this.props.removeFromBlogs(this.props.blog)\r\n        } catch (exeption) {\r\n          console.log(exeption)\r\n        }\r\n      }\r\n    } else {\r\n      window.alert('You don\\'t have permission to remove this blog')\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const blogStyle = {\r\n      paddingTop: 6,\r\n      paddingLeft: 2,\r\n      paddingBottom: 2,\r\n      border: 'solid',\r\n      borderWidth: 1,\r\n      marginBottom: 5\r\n    }\r\n\r\n    const showOnlyToCorrectUser = {\r\n      display: (this.props.blog.user._id === this.props.user.id || this.props.blog.user === null) ? '' : 'none'\r\n    }\r\n\r\n    if (this.state.displayMoreInfo) {\r\n      return (\r\n        <div onClick={this.toggleInfo} style={blogStyle} className='fullInfo'>\r\n          <div>{this.props.blog.title} by {this.props.blog.author}</div>\r\n          <a href={this.props.blog.url}>{this.props.blog.url}</a>\r\n          <div>\r\n            {this.props.blog.likes} likes\r\n            <button onClick={this.likeBlog}>like</button>\r\n          </div>\r\n          <div>added by {this.props.blog.user.name}</div>\r\n          <button style={showOnlyToCorrectUser} className='blueButton' onClick={this.removeBlog}>delete</button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div onClick={this.toggleInfo} style={blogStyle} className='defaultInfo'>\r\n        {this.props.blog.title} {this.props.blog.author}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  updateBlogs: PropTypes.func.isRequired,\r\n  removeFromBlogs: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  notify\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Blog)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({ handleSubmit, handleChange, username, password }) => {\r\n  return (\r\n    <div>\r\n      <h2>Log in to the application</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          username:\r\n          <input\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          password:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogForm = ({ handleSubmit, handleChange, title, author, url }) => {\r\n  return (\r\n    <div>\r\n      <h2>Create new</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          title:\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          author:\r\n          <input\r\n            type=\"text\"\r\n            name=\"author\"\r\n            value={author}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n          <input\r\n            type=\"text\"\r\n            name=\"url\"\r\n            value={url}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlogForm.propTypes = {\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  author: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BlogForm","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Togglable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      visible: false\r\n    }\r\n  }\r\n\r\n  toggleVisibility = () => {\r\n    this.setState({ visible: !this.state.visible })\r\n  }\r\n\r\n  render() {\r\n    const hideWhenVisible = { display: this.state.visible ? 'none' : '' }\r\n    const showWhenVisible = { display: this.state.visible ? '' : 'none' }\r\n\r\n    return (\r\n      <div>\r\n        <div style={hideWhenVisible}>\r\n          <button onClick={this.toggleVisibility}>{this.props.buttonLabel}</button>\r\n        </div>\r\n        <div style={showWhenVisible}>\r\n          {this.props.children}\r\n          <button onClick={this.toggleVisibility}>cancel</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\nimport Notification from './components/Notification'\r\nimport Blog from './components/BlogList'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './index.css'\r\nimport { connect } from 'react-redux'\r\nimport { notify } from './reducers/notificationReducer'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      blogs: [],\r\n      username: '',\r\n      password: '',\r\n      user: null,\r\n      title: '',\r\n      author: '',\r\n      url: '',\r\n      loginVisible: false\r\n    }\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const blogs = await blogService.getAll()\r\n    this.setState({ blogs: blogs.sort(this.compareLikes) })\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      this.setState({ user })\r\n    }\r\n  }\r\n\r\n  handleFieldChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value })\r\n  }\r\n\r\n  login = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      })\r\n\r\n      blogService.setToken(user.token)\r\n      window.localStorage.setItem('loggedBlogAppUser', JSON.stringify(user))\r\n\r\n      this.setState({\r\n        username: '',\r\n        password: '',\r\n        user\r\n      })\r\n      // setTimeout(() => {\r\n      //   this.setState({ notification: null })\r\n      // }, 5000)\r\n    } catch (exception) {\r\n      // this.setState({\r\n      //   error: 'invalid username or password'\r\n      // })\r\n      // setTimeout(() => {\r\n      //   this.setState({ error: null })\r\n      // }, 5000)\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    window.localStorage.removeItem('loggedBlogAppUser')\r\n    blogService.setToken(null)\r\n    this.setState({\r\n      user: null,\r\n      title: '',\r\n      author: '',\r\n      url: ''\r\n    })\r\n  }\r\n\r\n  addBlog = async (event) => {\r\n    event.preventDefault()\r\n    const blogObject = {\r\n      title: this.state.title,\r\n      author: this.state.author,\r\n      url: this.state.url\r\n    }\r\n\r\n    const savedBlog = await blogService.create(blogObject)\r\n    this.setState({\r\n      blogs: this.state.blogs.concat(savedBlog).sort(this.compareLikes),\r\n      title: '',\r\n      author: '',\r\n      url: '',\r\n    })\r\n    this.props.notify(`a new blog '${savedBlog.title}' by ${savedBlog.author} added`)\r\n    // setTimeout(() => {\r\n    //   this.setState({ notification: null })\r\n    // }, 5000)\r\n  }\r\n\r\n  updateBlogs = async (updatedBlog) => {\r\n    const blogs = this.state.blogs.map(blog => {\r\n      return blog.id === updatedBlog.id ? updatedBlog : blog\r\n    })\r\n    await this.setState({ blogs: blogs.sort(this.compareLikes) })\r\n  }\r\n\r\n  compareLikes = (a, b) => {\r\n    return b.likes - a.likes\r\n  }\r\n\r\n  removeFromBlogs = async (removedBlog) => {\r\n    const blogs = this.state.blogs.filter(blog => blog.id !== removedBlog.id)\r\n    await this.setState({ blogs: blogs.sort(this.compareLikes) })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.user === null) {\r\n      return (\r\n        <div>\r\n          <Notification />\r\n          <Togglable buttonLabel=\"sign in\">\r\n            <LoginForm\r\n              username={this.state.username}\r\n              password={this.state.password}\r\n              handleChange={this.handleFieldChange}\r\n              handleSubmit={this.login}\r\n            />\r\n          </Togglable>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Notification />\r\n        <h2>blogs</h2>\r\n        <p>{this.state.user.name} is currently logged in </p>\r\n        <button onClick={this.logout}>logout</button>\r\n\r\n        <BlogForm\r\n          title={this.state.title}\r\n          author={this.state.author}\r\n          url={this.state.url}\r\n          handleChange={this.handleFieldChange}\r\n          handleSubmit={this.addBlog}\r\n        />\r\n\r\n        {this.state.blogs.map(blog =>\r\n          <Blog\r\n            key={blog.id}\r\n            blog={blog}\r\n            user={this.state.user}\r\n            updateBlogs={this.updateBlogs}\r\n            removeFromBlogs={this.removeFromBlogs}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  notify\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(App)\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notifications: notificationReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\n// store.subscribe(() =>\r\n//   console.log(store.getState())\r\n// )\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}